# This is a basic workflow to help you get started with Actions

name: release

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      tag:
        description: 'tag'
        required: true
        type: string
      username:
        description: 'git username'
        required: true
        type: string
      email:
        description: 'git email'
        required: true
        type: string
      monorepo:
        description: 'is monorepository'
        required: false
        type: boolean
        default: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Release step
  release:
    runs-on: ['self-hosted', 'chore']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Unshallow checkout
        run: git fetch --prune --unshallow

      - if: ${{ inputs.monorepo == true }}
        name: Get current branch
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - if: ${{ inputs.monorepo == false }}
        name: Get current branch
        run: |
          BRANCH=$(git branch -r --contains ${{ github.ref_name }} --format "%(refname:lstrip=3)")
          echo "VERSION=$BRANCH" >> $GITHUB_ENV

      - if: ${{ inputs.monorepo == true }}
        name: Get previous tag
        id: previous_monorepo_tag
        run: echo "PREVIOUS_TAG=$(git describe --match "v${{ env.VERSION }}.*" --abbrev=0 --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
        continue-on-error: true

      - if: ${{ inputs.monorepo == false }}
        name: Get previous tag
        id: previous_tag
        run: echo "PREVIOUS_TAG=$(git describe --match "v${{ env.VERSION }}.*" --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))" >> $GITHUB_ENV
        continue-on-error: true

      - if: ${{ inputs.monorepo == true }}
        name: Check if previous_monorepo_tag step succeeded
        id: check_monorepo_previous_tag
        run: |
          if [ "${{ steps.previous_monorepo_tag.outcome }}" == "success" ]; then
            echo "PREVIOUS_TAG_FOUND=true" >> $GITHUB_ENV
          else
            echo "PREVIOUS_TAG_FOUND=false" >> $GITHUB_ENV
          fi

      - if: ${{ inputs.monorepo == false }}
        name: Check if previous_tag step succeeded
        id: check_previous_tag
        run: |
          if [ "${{ steps.previous_tag.outcome }}" == "success" ]; then
            echo "PREVIOUS_TAG_FOUND=true" >> $GITHUB_ENV
          else
            echo "PREVIOUS_TAG_FOUND=false" >> $GITHUB_ENV
          fi

      - if: ${{ inputs.monorepo == true }}
        name: Download script
        run: curl -o $PWD/release.cjs https://raw.githubusercontent.com/iomediacommunication/pipeline/main/.github/scripts/release.cjs

      - if: ${{ inputs.monorepo == true }}
        name: Give script permissions
        run: chmod +x $PWD/release.cjs

      - if: ${{ inputs.monorepo == true }}
        name: Update version
        shell: bash
        run: node $PWD/release.cjs v${{ inputs.tag }}

      - if: ${{ inputs.monorepo == true }}
        name: Remove script
        run: rm -rf $PWD/release.cjs

      - if: ${{ inputs.monorepo == true }}
        name: Commit and push changes
        continue-on-error: true
        run: |
          git config --global user.name "${{ inputs.username }}"
          git config --global user.email "${{ inputs.email }}"
          git add .
          git commit -m "ci: bump release version ${{ inputs.tag }}"
          git push

      - if: ${{ inputs.monorepo == true }}
        name: Checkout code
        uses: actions/checkout@v3

      - if: ${{ inputs.monorepo == true }}
        name: Create release
        run: gh release create v${{ inputs.tag }} --title v${{ inputs.tag }} --target ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ inputs.monorepo == true && env.PREVIOUS_TAG_FOUND == 'true' }}
        name: Generate monorepo CHANGELOG with fromTag and toTag
        id: changelog_monorepo_with_tags
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: v${{ inputs.tag }}
          toTag: ${{ env.PREVIOUS_TAG }}
          writeToFile: false

      - if: ${{ inputs.monorepo == true && env.PREVIOUS_TAG_FOUND == 'false' }}
        name: Generate monorepo CHANGELOG with tag
        id: changelog_monorepo_with_tag
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ inputs.tag }}
          writeToFile: false

      - if: ${{ inputs.monorepo == false && env.PREVIOUS_TAG_FOUND == 'true' }}
        name: Generate CHANGELOG with fromTag and toTag
        id: changelog_with_tags
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ inputs.tag }}
          toTag: ${{ env.PREVIOUS_TAG }}
          writeToFile: false

      - if: ${{ inputs.monorepo == false && env.PREVIOUS_TAG_FOUND == 'false' }}
        name: Generate CHANGELOG with tag
        id: changelog_with_tag
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.tag }}
          writeToFile: false

      - if: ${{ inputs.monorepo == true && env.PREVIOUS_TAG_FOUND == 'true' }}
        name: Edit release
        run: gh release edit v${{ inputs.tag }} --notes '${{ steps.changelog_monorepo_with_tags.outputs.changes }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ inputs.monorepo == true && env.PREVIOUS_TAG_FOUND == 'false' }}
        name: Edit release
        run: gh release edit v${{ inputs.tag }} --notes '${{ steps.changelog_monorepo_with_tag.outputs.changes }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ inputs.monorepo == false && env.PREVIOUS_TAG_FOUND == 'true' }}
        name: Create release
        run: gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --notes '${{ steps.changelog_with_tags.outputs.changes }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ inputs.monorepo == false && env.PREVIOUS_TAG_FOUND == 'false' }}
        name: Create release
        run: gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --notes '${{ steps.changelog_with_tag.outputs.changes }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
